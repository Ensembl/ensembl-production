includeConfig './base.config'

params.pipeline_dir = "$PWD"
params.user = "$USER"
params.email = "${params.user}@ebi.ac.uk"
params.email_server = "hh-smtp.ebi.ac.uk:25"

params.work_dir = "$BASE_DIR"
params.scripts_dir = "${params.work_dir}/ensembl-production/src/python/scripts/"
params.perl_scripts_dir = "${params.work_dir}/ensembl-production/scripts/xrefs/"

params.config_file = "${params.work_dir}/ensembl-production/src/python/ensembl/xrefs/config/xref_all_sources.json"
params.sources_config_file = "${params.work_dir}/ensembl-production/src/python/ensembl/xrefs/config/xref_config.ini"
params.source_db_url = ''
params.skip_download = 0
params.reuse_db = 0
params.skip_preparse = 1
params.split_files_by_species = 1
params.tax_ids_file = ''
params.update_mode = 0

params.base_path = ''
params.clean_files = 1
params.clean_dir = "${params.base_path}/clean_files"

trace {
    enabled = true
    file = "trace"
    overwrite = true
}

report {
    overwrite = true
    file = "report.html"
    enable = true
}

profiles {

  lsf {
   process {
    errorStrategy = { task.attempt <= process.maxRetries  ? 'retry' : 'finish' }
    executor = 'lsf'
    queue = 'production'
    queueSize = 100
    maxRetries = 3
     withLabel:small_process {
        memory = 200.MB
        //very specific to lsf
        executor.perTaskReserve = 200.MB
    }
    withLabel: dm {
        queue = 'datamover'
        time = '2h'
    }
  }
 }

  slurm {
   process {
    errorStrategy = { task.attempt <= process.maxRetries  ? 'retry' : 'finish' }
    executor = 'slurm'
    queue = 'production'
    queueSize = 100
    maxRetries = 3
    time = '1d'

    withLabel:small_process {
        memory = 200.MB
    }

    withLabel: dm {
        queue = 'datamover'
        time = '3h'
        memory = 2.GB
    }
    withLabel:mem4GB {
        time = '5d'
        memory = 4.GB
    }
  }
 }
}


